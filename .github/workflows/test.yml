name: Test

on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master
      - '*.*.x'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: 2

defaults:
  run:
    shell: bash -c "exec $CONDA_PREFIX/bin/bash -elo pipefail {0}"

jobs:
  test:
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest']
        python-version: ['3.9', '3']
        include:
          - os: 'macos-latest'
            python-version: '3.9'  # oldest supported
    env:
      PYTEST_ADDOPTS: --cov --color=yes

    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Patch DNS
        uses: cylc/release-actions/patch-dns@v1

      - name: Install System Dependencies
        uses: mamba-org/setup-micromamba@v2
        with:
          cache-environment: true
          post-cleanup: 'all'
          environment-name: cylc-uiserver
          create-args: >-
            python=${{ matrix.python-version }}
            pip
            bash
            coreutils

      - name: install cylc-flow
        uses: cylc/release-actions/install-cylc-components@v1
        with:
          cylc_flow: true
          cylc_flow_opts: ''

      - name: install cylc-uiserver
        run: pip install -e .[all]

      - name: Style test
        if: startsWith(matrix.os, 'ubuntu')
        run: flake8

      - name: Type checking
        if: startsWith(matrix.os, 'ubuntu')
        run: mypy

      - name: Check changelog
        uses: cylc/release-actions/towncrier-draft@v1

      - name: Test
        run: pytest

      - name: Coverage report
        run: |
          coverage xml --ignore-errors
          coverage report

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage_${{ matrix.os }}_py-${{ matrix.python-version }}
          path: coverage.xml
          retention-days: 4

  codecov:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download coverage artifacts
        uses: actions/download-artifact@v5

      - name: Codecov upload
        uses: codecov/codecov-action@v5
        with:
          name: ${{ github.workflow }}
          fail_ci_if_error: true
          verbose: true
          # Token not required for public repos, but avoids upload failure due
          # to rate-limiting (but not for PRs opened from forks)
          token: ${{ secrets.CODECOV_TOKEN }}
