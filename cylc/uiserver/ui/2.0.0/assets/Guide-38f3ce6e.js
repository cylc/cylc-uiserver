import{_ as b,j as k,aB as g,O as w,aC as T,r as _,c as x,w as s,V,o as u,L as t,a as e,aD as c,aE as h,aF as d,k as m,d as v,t as j,R as C,g as f,G as z,H as i,J as o,e as a,K as r}from"./index-4d6c7840.js";const A={name:"Guide",head(){return{title:k("App.guide")}},components:{task:g,job:w},data:()=>({states:T})},L=t("h1",{class:"ma-0"},"Cylc UI Quick Start",-1),B={class:"card-grid"},I=t("p",{class:"text-h4 text--primary"},"Tasks & Jobs",-1),N=t("p",null,[a(" A "),t("b",null,"task"),a(" represents a single unit of activity in a workflow. ")],-1),S=t("p",null,[a(" A "),t("b",null,"job"),a(" performs the activity of a task, by means of a "),t("b",null,"job script"),a(" submitted to a "),t("b",null,"job runner"),a(". ")],-1),W=t("p",null," One task can have multiple jobs, by automatic retry or manual triggering. ",-1),$={id:"task-job-state-table"},G=t("tr",null,[t("td",null,"Task"),t("td"),t("td",null,"Job")],-1),q={style:{"font-size":"2em"}},D={style:{"font-size":"2em"}},E=t("p",null,[a(" A "),t("b",null,"waiting task"),a(" with "),t("b",null,"failed jobs"),a(" will "),t("b",null,"retry"),a(" after a delay. ")],-1),H=t("p",null,[a(" A "),t("b",null,"task"),a(" can only fail if it runs out of retries. ")],-1),J=t("p",{class:"text-h4 text--primary"},"Why Are We Waiting?",-1),O=t("p",null," Why has my task not started to run yet? ",-1),Q=t("b",null,"dependencies",-1),R=t("b",null,"xtriggers",-1),U=t("b",null,"released",-1),F=t("p",null,[t("em",null,"Note: tasks downstream of queued (or runahead limited) tasks are not themselves shown as queued (or runahead limited) because they are not otherwise ready to run yet.")],-1),K=t("p",null,[t("em",null,"Note: external triggers (e.g. clock triggers) are not yet exposed in the UI.")],-1);function P(p,M,X,Y,Z,tt){const l=_("task"),y=_("job");return u(),x(V,{fluid:""},{default:s(()=>[L,t("div",B,[e(f,null,{default:s(()=>[e(c,{variant:"outlined",class:"pa-1"},{default:s(()=>[e(h,{"primary-title":""},{default:s(()=>[I]),_:1}),e(d,null,{default:s(()=>[N,S,W]),_:1}),t("table",$,[G,(u(!0),m(C,null,v(p.states,n=>(u(),m("tr",{key:n.name.name},[t("td",q,[e(l,{task:{state:n.name,task:{meanElapsedTime:30}},startTime:String(Date.now())},null,8,["task","startTime"])]),t("td",null,[t("span",null,j(n.name),1)]),t("td",D,[e(y,{status:n.name},null,8,["status"])])]))),128))]),e(d,null,{default:s(()=>[E,H]),_:1})]),_:1})]),_:1}),e(f,null,{default:s(()=>[e(c,{variant:"outlined",class:"pa-1"},{default:s(()=>[e(h,{"primary-title":""},{default:s(()=>[J]),_:1}),e(d,null,{default:s(()=>[O,e(z,{lines:"three"},{default:s(()=>[e(i,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting"},class:"mr-4"})]),default:s(()=>[e(o,null,{default:s(()=>[a(" Waiting ")]),_:1}),e(r,null,{default:s(()=>[a(" The task is not ready to run yet - it is still waiting on upstream "),Q,a(" or "),R,a(". ")]),_:1})]),_:1}),e(i,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting",isHeld:!0},class:"mr-4"})]),default:s(()=>[e(o,null,{default:s(()=>[a(" Held ")]),_:1}),e(r,null,{default:s(()=>[a(" The task won't run unless "),U,a(" from hold. Tasks can be held before they are ready to run (or after, prior to retriggering). ")]),_:1})]),_:1}),e(i,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting",isQueued:!0},class:"mr-4"})]),default:s(()=>[e(o,null,{default:s(()=>[a(" Queued ")]),_:1}),e(r,null,{default:s(()=>[a(" The task is ready to run but is held back by a queue, which restricts the number of active tasks. ")]),_:1})]),_:1}),e(i,null,{prepend:s(()=>[e(l,{style:{"font-size":"2em"},task:{state:"waiting",isRunahead:!0},class:"mr-4"})]),default:s(()=>[e(o,null,{default:s(()=>[a(" Runahead ")]),_:1}),e(r,null,{default:s(()=>[a(" The task is ready to run but is beyond the runahead limit, which restricts the number of active cycle points. ")]),_:1})]),_:1})]),_:1}),F,K]),_:1})]),_:1})]),_:1})])]),_:1})}const st=b(A,[["render",P]]);export{st as default};
